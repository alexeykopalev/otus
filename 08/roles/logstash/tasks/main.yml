---
- name: Hosts | populate inventory into hosts file
  ansible.builtin.blockinfile:
    dest: /etc/hosts
    block: |-
      {% for item in groups['kafka_servers'] %}
      {{ hostvars[item].ansible_host }} {{ item }}.{{ domain_name }} {{ item }}
      {% endfor %}
    state: present
    create: true
    backup: true
    marker: "# Ansible kafka hosts {mark}"

# wget https://artifacts.opensearch.org/logstash/logstash-oss-with-opensearch-output-plugin-8.9.0-linux-x64.tar.gz -O /tmp/logstash.tar.gz 
- name: Logstash | Download Logstash
  ansible.builtin.get_url:
    url: https://artifacts.opensearch.org/logstash/logstash-oss-with-opensearch-output-plugin-8.9.0-linux-x64.tar.gz
    dest: /tmp/logstash.tar.gz
  register: download

# useradd -M -s /bin/false logstash
- name: Logstash | Create Logstash user
  ansible.builtin.user:
    name: logstash
    state: present
    shell: /bin/false
    create_home: false
  when: download.changed

# mkdir /opt/logstash /var/log/logstash
- name: Logstash | Create required directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: logstash
    group: logstash
  when: download.changed
  loop: 
    - /opt/logstash
    - /var/log/logstash

- name: Logstash | Extract the tar file
  ansible.builtin.unarchive:
    src: /tmp/logstash.tar.gz
    dest: /opt/logstash
    remote_src: true
    extra_opts:
    - "--strip-components=1"
    owner: logstash
    group: logstash
  when: download.changed

# mkdir /opt/logstash/config/conf.d
- name: Logstash | Create additional config directory
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: logstash
    group: logstash
  when: download.changed
  loop: 
    - /opt/logstash/config/conf.d

# cp logstash.yml pipelines.yml /opt/logstash/config/logstash.yml
- name: Logstash | Copy configuration files
  ansible.builtin.template:
    src: "{{ item.source }}"
    dest: "{{ item.destination }}"
    owner: logstash
    group: logstash
    mode: 0600
  loop: 
    - { source: 'logstash.yml.j2', destination: '/opt/logstash/config/logstash.yml' }
    - { source: 'pipelines.yml.j2', destination: '/opt/logstash/config/pipelines.yml' }
    - { source: 'logstash.conf.j2', destination: '/opt/logstash/config/conf.d/logstash.conf' }
    #- { source: 'wordpress-access.conf.j2', destination: '/opt/logstash/config/conf.d/wordpress-access.conf.conf' }


- name: Logstash | Create systemd service
  ansible.builtin.template:
    src: logstash.service.j2
    dest: /etc/systemd/system/logstash.service
    owner: root
    group: root
    mode: 0644

# systemctl daemon-reload && \
# systemctl enable --now logstash.service
- name: Logstash | Start logstash
  ansible.builtin.service:
    name: logstash
    state: restarted
    enabled: true
    daemon_reload: true